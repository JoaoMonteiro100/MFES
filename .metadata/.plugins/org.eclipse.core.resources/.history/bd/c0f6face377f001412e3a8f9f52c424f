class ExchangeSystem
/*
	Defines the state variables and operations available to the users (both sellers and buyers).
	Class 5, T3, FEUP, MFES, 2014/2015
*/
	instance variables
		public sellOrders: seq of SellOrder := [];
		public buyOrders: seq of BuyOrder := [];

	operations
		public ExchangeSystem() res: ExchangeSystem ==
		(
		--IO`println("Model?");
			return self;
		);
	
		--Seller operations
		public specificSellOrder() ==
		(
			IO`println("Model?");
			nvalue := IO`freadval("test.txt");
			IO`println(value);
		);
		
		
		public placeSellOrder(so:SellOrder) ==
    (
   		so.setID(len sellOrders);
    	sellOrders := sellOrders~ ^ [so];
    )
    ext wr sellOrders
    post sellOrders = sellOrders~ ^ [so];
		
		
		public cancelSale(so:SellOrder) res: bool ==
		(
			for i = 1 to len sellOrders do
			(
				if so.id = sellOrders(i).id then so.status := <Canceled>;
				return true;
			)
		)
		ext wr sellOrders
		pre len sellOrders > 0;
		
		
		
    
    
    
    --Buyer operations
    public placeBuyOrder(bo:BuyOrder) ==
    (
    	bo.setID(len buyOrders);
    	buyOrders := buyOrders~ ^ [bo];
    )
    ext wr buyOrders
    post buyOrders = buyOrders~ ^ [bo];
    
    
    public cancelPurchase(bo:BuyOrder) res: bool ==
    (
    	for i = 1 to len buyOrders do
			(
				if bo.id = buyOrders(i).id then bo.status := <Canceled>;
				return true;
			)
		)
		ext wr buyOrders
		pre len buyOrders > 0;
    
    
   
    
end ExchangeSystem